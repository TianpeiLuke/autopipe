{
  "script_name": "tabular_preprocess",
  "level1": {
    "passed": false,
    "issues": [
      {
        "severity": "CRITICAL",
        "category": "missing_file",
        "message": "Script file not found: /Users/tianpeixie/github_workspace/cursus/src/cursus/steps/scripts/tabular_preprocess.py",
        "recommendation": "Create the script file tabular_preprocess.py"
      }
    ]
  },
  "level2": {
    "passed": true,
    "issues": [
      {
        "severity": "INFO",
        "category": "multi_variant_validation",
        "message": "Smart Specification Selection: validated against 5 variants",
        "details": {
          "contract": "tabular_preprocess_contract",
          "variants": [
            "training",
            "testing",
            "validation",
            "calibration",
            "generic"
          ],
          "total_dependencies": 1,
          "total_outputs": 1,
          "contract_inputs": 1,
          "contract_outputs": 1
        },
        "recommendation": "Multi-variant validation completed successfully"
      },
      {
        "severity": "INFO",
        "category": "step_type_resolution",
        "message": "Step type resolved via registry: TabularPreprocessing_Training -> TabularPreprocessing -> Processing",
        "details": {
          "contract": "tabular_preprocess_contract",
          "original_spec_type": "TabularPreprocessing_Training",
          "canonical_name": "TabularPreprocessing",
          "resolved_sagemaker_type": "Processing",
          "registry_available": true
        },
        "recommendation": "Using Processing step property paths for validation"
      },
      {
        "severity": "INFO",
        "category": "property_path_validation",
        "message": "Valid property path in output processed_data: properties.ProcessingOutputConfig.Outputs['processed_data'].S3Output.S3Uri",
        "details": {
          "contract": "tabular_preprocess_contract",
          "logical_name": "processed_data",
          "property_path": "properties.ProcessingOutputConfig.Outputs['processed_data'].S3Output.S3Uri",
          "step_type": "processing",
          "validation_source": "SageMaker Documentation v2.92.2",
          "documentation_reference": "https://sagemaker.readthedocs.io/en/v2.92.2/amazon_sagemaker_model_building_pipeline.html#data-dependency-property-reference"
        },
        "recommendation": "Property path is correctly formatted for the step type"
      },
      {
        "severity": "INFO",
        "category": "property_path_validation_summary",
        "message": "Property path validation completed for tabular_preprocess_contract",
        "details": {
          "contract": "tabular_preprocess_contract",
          "step_type": "processing",
          "node_type": "internal",
          "total_outputs": 1,
          "outputs_with_property_paths": 1,
          "validation_reference": "https://sagemaker.readthedocs.io/en/v2.92.2/amazon_sagemaker_model_building_pipeline.html#data-dependency-property-reference",
          "documentation_version": "v2.92.2"
        },
        "recommendation": "Validated 1/1 outputs with property paths against SageMaker documentation"
      }
    ],
    "contract": {
      "entry_point": "tabular_preprocessing.py",
      "inputs": {
        "DATA": {
          "path": "/opt/ml/processing/input/data"
        }
      },
      "outputs": {
        "processed_data": {
          "path": "/opt/ml/processing/output"
        }
      },
      "arguments": {},
      "environment_variables": {
        "required": [
          "LABEL_FIELD",
          "TRAIN_RATIO",
          "TEST_VAL_RATIO"
        ],
        "optional": {
          "CATEGORICAL_COLUMNS": "",
          "NUMERICAL_COLUMNS": "",
          "TEXT_COLUMNS": "",
          "DATE_COLUMNS": ""
        }
      },
      "description": "\n    Tabular preprocessing script that:\n    1. Combines data shards from input directory\n    2. Cleans and processes label field\n    3. Splits data into train/test/val for training jobs\n    4. Outputs processed CSV files by split\n    \n    Contract aligned with actual script implementation:\n    - Inputs: DATA (required) - reads from /opt/ml/processing/input/data\n    - Outputs: processed_data (primary) - writes to /opt/ml/processing/output\n    - Arguments: job_type (required) - defines processing mode (training/validation/testing)\n    \n    Script Implementation Details:\n    - Reads data shards (CSV, JSON, Parquet) from input/data directory\n    - Supports gzipped files and various formats\n    - Processes labels (converts categorical to numeric if needed)\n    - Splits data based on job_type (training creates train/test/val splits)\n    - Outputs processed files to split subdirectories under /opt/ml/processing/output\n    ",
      "framework_requirements": {
        "pandas": ">=1.3.0",
        "numpy": ">=1.21.0",
        "scikit-learn": ">=1.0.0"
      }
    },
    "specifications": {
      "tabular_preprocessing_testing_spec": {
        "step_type": "TabularPreprocessing_Testing",
        "node_type": "internal",
        "dependencies": [
          {
            "logical_name": "DATA",
            "dependency_type": "processing_output",
            "required": true,
            "compatible_sources": [
              "ProcessingStep",
              "DataLoad",
              "CradleDataLoading"
            ],
            "data_type": "S3Uri",
            "description": "Raw testing data for preprocessing"
          }
        ],
        "outputs": [
          {
            "logical_name": "processed_data",
            "output_type": "processing_output",
            "property_path": "properties.ProcessingOutputConfig.Outputs['processed_data'].S3Output.S3Uri",
            "data_type": "S3Uri",
            "description": "Processed testing data"
          }
        ]
      },
      "tabular_preprocessing_calibration_spec": {
        "step_type": "TabularPreprocessing_Calibration",
        "node_type": "internal",
        "dependencies": [
          {
            "logical_name": "DATA",
            "dependency_type": "processing_output",
            "required": true,
            "compatible_sources": [
              "ProcessingStep",
              "DataLoad",
              "CradleDataLoading"
            ],
            "data_type": "S3Uri",
            "description": "Raw calibration data for preprocessing"
          }
        ],
        "outputs": [
          {
            "logical_name": "processed_data",
            "output_type": "processing_output",
            "property_path": "properties.ProcessingOutputConfig.Outputs['processed_data'].S3Output.S3Uri",
            "data_type": "S3Uri",
            "description": "Processed calibration data for model evaluation"
          }
        ]
      },
      "tabular_preprocessing_validation_spec": {
        "step_type": "TabularPreprocessing_Validation",
        "node_type": "internal",
        "dependencies": [
          {
            "logical_name": "DATA",
            "dependency_type": "processing_output",
            "required": true,
            "compatible_sources": [
              "ProcessingStep",
              "DataLoad",
              "CradleDataLoading"
            ],
            "data_type": "S3Uri",
            "description": "Raw validation data for preprocessing"
          }
        ],
        "outputs": [
          {
            "logical_name": "processed_data",
            "output_type": "processing_output",
            "property_path": "properties.ProcessingOutputConfig.Outputs['processed_data'].S3Output.S3Uri",
            "data_type": "S3Uri",
            "description": "Processed validation data"
          }
        ]
      },
      "tabular_preprocessing_training_spec": {
        "step_type": "TabularPreprocessing_Training",
        "node_type": "internal",
        "dependencies": [
          {
            "logical_name": "DATA",
            "dependency_type": "processing_output",
            "required": true,
            "compatible_sources": [
              "ProcessingStep",
              "DataLoad",
              "CradleDataLoading"
            ],
            "data_type": "S3Uri",
            "description": "Raw training data for preprocessing"
          }
        ],
        "outputs": [
          {
            "logical_name": "processed_data",
            "output_type": "processing_output",
            "property_path": "properties.ProcessingOutputConfig.Outputs['processed_data'].S3Output.S3Uri",
            "data_type": "S3Uri",
            "description": "Processed training data with train/val/test splits"
          }
        ]
      },
      "tabular_preprocessing_spec": {
        "step_type": "TabularPreprocessing_Training",
        "node_type": "internal",
        "dependencies": [
          {
            "logical_name": "DATA",
            "dependency_type": "processing_output",
            "required": true,
            "compatible_sources": [
              "ProcessingStep",
              "DataLoad",
              "CradleDataLoading"
            ],
            "data_type": "S3Uri",
            "description": "Raw tabular data for preprocessing"
          }
        ],
        "outputs": [
          {
            "logical_name": "processed_data",
            "output_type": "processing_output",
            "property_path": "properties.ProcessingOutputConfig.Outputs['processed_data'].S3Output.S3Uri",
            "data_type": "S3Uri",
            "description": "Processed tabular data with train/val/test splits"
          }
        ]
      }
    },
    "unified_specification": {
      "primary_spec": {
        "step_type": "TabularPreprocessing_Training",
        "node_type": "internal",
        "dependencies": [
          {
            "logical_name": "DATA",
            "dependency_type": "processing_output",
            "required": true,
            "compatible_sources": [
              "ProcessingStep",
              "DataLoad",
              "CradleDataLoading"
            ],
            "data_type": "S3Uri",
            "description": "Raw training data for preprocessing"
          }
        ],
        "outputs": [
          {
            "logical_name": "processed_data",
            "output_type": "processing_output",
            "property_path": "properties.ProcessingOutputConfig.Outputs['processed_data'].S3Output.S3Uri",
            "data_type": "S3Uri",
            "description": "Processed training data with train/val/test splits"
          }
        ]
      },
      "variants": {
        "training": {
          "step_type": "TabularPreprocessing_Training",
          "node_type": "internal",
          "dependencies": [
            {
              "logical_name": "DATA",
              "dependency_type": "processing_output",
              "required": true,
              "compatible_sources": [
                "ProcessingStep",
                "DataLoad",
                "CradleDataLoading"
              ],
              "data_type": "S3Uri",
              "description": "Raw training data for preprocessing"
            }
          ],
          "outputs": [
            {
              "logical_name": "processed_data",
              "output_type": "processing_output",
              "property_path": "properties.ProcessingOutputConfig.Outputs['processed_data'].S3Output.S3Uri",
              "data_type": "S3Uri",
              "description": "Processed training data with train/val/test splits"
            }
          ]
        },
        "testing": {
          "step_type": "TabularPreprocessing_Testing",
          "node_type": "internal",
          "dependencies": [
            {
              "logical_name": "DATA",
              "dependency_type": "processing_output",
              "required": true,
              "compatible_sources": [
                "ProcessingStep",
                "DataLoad",
                "CradleDataLoading"
              ],
              "data_type": "S3Uri",
              "description": "Raw testing data for preprocessing"
            }
          ],
          "outputs": [
            {
              "logical_name": "processed_data",
              "output_type": "processing_output",
              "property_path": "properties.ProcessingOutputConfig.Outputs['processed_data'].S3Output.S3Uri",
              "data_type": "S3Uri",
              "description": "Processed testing data"
            }
          ]
        },
        "validation": {
          "step_type": "TabularPreprocessing_Validation",
          "node_type": "internal",
          "dependencies": [
            {
              "logical_name": "DATA",
              "dependency_type": "processing_output",
              "required": true,
              "compatible_sources": [
                "ProcessingStep",
                "DataLoad",
                "CradleDataLoading"
              ],
              "data_type": "S3Uri",
              "description": "Raw validation data for preprocessing"
            }
          ],
          "outputs": [
            {
              "logical_name": "processed_data",
              "output_type": "processing_output",
              "property_path": "properties.ProcessingOutputConfig.Outputs['processed_data'].S3Output.S3Uri",
              "data_type": "S3Uri",
              "description": "Processed validation data"
            }
          ]
        },
        "calibration": {
          "step_type": "TabularPreprocessing_Calibration",
          "node_type": "internal",
          "dependencies": [
            {
              "logical_name": "DATA",
              "dependency_type": "processing_output",
              "required": true,
              "compatible_sources": [
                "ProcessingStep",
                "DataLoad",
                "CradleDataLoading"
              ],
              "data_type": "S3Uri",
              "description": "Raw calibration data for preprocessing"
            }
          ],
          "outputs": [
            {
              "logical_name": "processed_data",
              "output_type": "processing_output",
              "property_path": "properties.ProcessingOutputConfig.Outputs['processed_data'].S3Output.S3Uri",
              "data_type": "S3Uri",
              "description": "Processed calibration data for model evaluation"
            }
          ]
        },
        "generic": {
          "step_type": "TabularPreprocessing_Training",
          "node_type": "internal",
          "dependencies": [
            {
              "logical_name": "DATA",
              "dependency_type": "processing_output",
              "required": true,
              "compatible_sources": [
                "ProcessingStep",
                "DataLoad",
                "CradleDataLoading"
              ],
              "data_type": "S3Uri",
              "description": "Raw tabular data for preprocessing"
            }
          ],
          "outputs": [
            {
              "logical_name": "processed_data",
              "output_type": "processing_output",
              "property_path": "properties.ProcessingOutputConfig.Outputs['processed_data'].S3Output.S3Uri",
              "data_type": "S3Uri",
              "description": "Processed tabular data with train/val/test splits"
            }
          ]
        }
      },
      "unified_dependencies": {
        "DATA": {
          "logical_name": "DATA",
          "dependency_type": "processing_output",
          "required": true,
          "compatible_sources": [
            "ProcessingStep",
            "DataLoad",
            "CradleDataLoading"
          ],
          "data_type": "S3Uri",
          "description": "Raw tabular data for preprocessing"
        }
      },
      "unified_outputs": {
        "processed_data": {
          "logical_name": "processed_data",
          "output_type": "processing_output",
          "property_path": "properties.ProcessingOutputConfig.Outputs['processed_data'].S3Output.S3Uri",
          "data_type": "S3Uri",
          "description": "Processed tabular data with train/val/test splits"
        }
      },
      "dependency_sources": {
        "DATA": [
          "training",
          "testing",
          "validation",
          "calibration",
          "generic"
        ]
      },
      "output_sources": {
        "processed_data": [
          "training",
          "testing",
          "validation",
          "calibration",
          "generic"
        ]
      },
      "variant_count": 5
    }
  },
  "level3": {
    "passed": true,
    "issues": [],
    "specification": {
      "step_type": "TabularPreprocessing_Training",
      "node_type": "internal",
      "dependencies": [
        {
          "logical_name": "DATA",
          "dependency_type": "processing_output",
          "required": true,
          "compatible_sources": [
            "ProcessingStep",
            "DataLoad",
            "CradleDataLoading"
          ],
          "data_type": "S3Uri",
          "description": "Raw tabular data for preprocessing"
        }
      ],
      "outputs": [
        {
          "logical_name": "processed_data",
          "output_type": "processing_output",
          "property_path": "properties.ProcessingOutputConfig.Outputs['processed_data'].S3Output.S3Uri",
          "data_type": "S3Uri",
          "description": "Processed tabular data with train/val/test splits"
        }
      ]
    }
  },
  "level4": {},
  "overall_status": "ERROR",
  "error": "'HybridFileResolver' object has no attribute 'get_available_files_report'",
  "metadata": {
    "script_name": "tabular_preprocess",
    "validation_timestamp": "2025-08-14T08:25:43.819233",
    "validator_version": "1.0.0",
    "script_path": "/Users/tianpeixie/github_workspace/cursus/src/cursus/steps/scripts/tabular_preprocess.py"
  }
}